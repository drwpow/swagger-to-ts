/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  readonly "/home": {
    readonly get: operations["unifiedhome#home"];
  };
  readonly "/nav": {
    readonly get: operations["unifiedhome#nav"];
  };
  readonly "/status": {
    readonly get: operations["status#status"];
  };
  readonly "/v1/home": {
    readonly get: operations["unifiedhome#home"];
  };
  readonly "/v1/nav": {
    readonly get: operations["unifiedhome#nav"];
  };
}

export interface components {
  readonly schemas: {
    readonly Accountengagementconfig: {
      /** True if the account dashboard is enabled */
      readonly accountDashboard: boolean;
    };
    readonly Accountperformanceconfig: {
      readonly developmentResources: boolean;
      readonly goals: boolean;
      readonly peerFeedbackInvites: boolean;
      readonly performanceCycles: boolean;
      readonly praise: boolean;
      readonly reviews: boolean;
      readonly selfReflections: boolean;
      readonly teams: boolean;
    };
    readonly Accountproducts: {
      readonly effectiveness: boolean;
      readonly engagement: boolean;
      readonly performance: boolean;
    };
    readonly Accountresult: {
      readonly engagementConfig: components["schemas"]["Accountengagementconfig"];
      /** The account's aggregate ID */
      readonly id: string;
      readonly logoUrl?: string;
      readonly name: string;
      readonly performanceConfig: components["schemas"]["Accountperformanceconfig"];
      readonly products: components["schemas"]["Accountproducts"];
      readonly subdomain: string;
    };
    readonly ErrorInstance: {
      /** Service-specific error code, expressed as a string */
      readonly code?: string;
      /** A human-readable explanation specific to this occurrence of the problem */
      readonly detail?: string;
      /** A unique identifier for this particular occurrence of the problem */
      readonly id?: string;
      /** A a short, human-readable name for the class of errors */
      readonly title: string;
    };
    /** Access denied */
    readonly Forbidden: {
      readonly errors: readonly components["schemas"]["ErrorInstance"][];
    };
    /** Data required for the unified home */
    readonly HomeResponseBody: {
      readonly account: components["schemas"]["Accountresult"];
      readonly user: components["schemas"]["Userresult"];
    };
    /** Information about this build */
    readonly StatusBuildDetails: {
      /** Git branch this version was built from */
      readonly branch?: string;
      /** Git commit hash this version was built from */
      readonly commit?: string;
      /** Buildkite build number */
      readonly number?: string;
      /** Application version */
      readonly version?: string;
    };
    /** Details of the environment of the application */
    readonly StatusEnvironmentDetails: {
      /** Deployed farm name */
      readonly farm?: string;
      /** URL used to communicate with Manager Labs */
      readonly managerLabsEndpoint?: string;
      /** URL used to communicate with Murmur */
      readonly murmurEndpoint?: string;
      /** URL used to communicate with Performance */
      readonly perfEndpoint?: string;
    };
    readonly StatusResponse: {
      readonly build?: components["schemas"]["StatusBuildDetails"];
      readonly environment?: components["schemas"]["StatusEnvironmentDetails"];
    };
    readonly Useravailablethreesixties: {
      /** The date and time when the survey was launched */
      readonly surveyLaunchDate: string;
      /** The name of the 360 survey */
      readonly surveyName: string;
      /** The url for the user's 360 survey process */
      readonly surveyUrl: string;
    };
    readonly Userresult: {
      /** Available three sixty surveys for the user */
      readonly availableThreeSixties?: readonly components["schemas"]["Useravailablethreesixties"][];
      readonly email?: string;
      /** True if the user has direct reports in Performance */
      readonly hasDirectReports: boolean;
      /** True if the user is permitted to access Skills Coach */
      readonly hasSkillsCoachAccess: boolean;
      /** The account's aggregate ID */
      readonly id: string;
      /** The language set for the user */
      readonly locale?: string;
      readonly name: string;
      readonly profileImageUrl?: string;
      readonly roles: components["schemas"]["Userroles"];
    };
    readonly Userroles: {
      readonly accountAdmin: boolean;
      /** True if the user has permission to see the account dashboard */
      readonly accountDashboardViewer: boolean;
      readonly hrBusinessPartner: boolean;
      readonly performanceAdmin: boolean;
      readonly surveyAdmin: boolean;
      readonly surveyCreator: boolean;
      readonly surveyDataAnalyst: boolean;
    };
  };
}

export interface operations {
  readonly "unifiedhome#home": {
    readonly responses: {
      /** OK response. */
      readonly 200: {
        readonly content: {
          readonly "application/json": components["schemas"]["HomeResponseBody"];
        };
      };
      /** Forbidden response. */
      readonly 403: {
        readonly content: {
          readonly "application/json": components["schemas"]["Forbidden"];
        };
      };
    };
  };
  readonly "unifiedhome#nav": {
    readonly responses: {
      /** OK response. */
      readonly 200: {
        readonly content: {
          readonly "application/json": components["schemas"]["HomeResponseBody"];
        };
      };
      /** Forbidden response. */
      readonly 403: {
        readonly content: {
          readonly "application/json": components["schemas"]["Forbidden"];
        };
      };
    };
  };
  readonly "status#status": {
    readonly responses: {
      /** OK response. */
      readonly 200: {
        readonly content: {
          readonly "application/json": components["schemas"]["StatusResponse"];
        };
      };
    };
  };
}

export interface external {}
